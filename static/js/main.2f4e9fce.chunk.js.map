{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","storeLink","isWrongLink","code","title","showButton","isRed","handleChange","bind","assertThisInitialized","changeColor","e","change","target","name","value","setState","split","_this2","react_default","a","createElement","className","width","height","xmlns","d","fill","fill-rule","placeholder","onChange","onClick","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f4e9fce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      storeLink: \"\",\n      isWrongLink: false,\n      code: `\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"https://vdthatte.github.io/button-css/button.css\" >\n      <a class=\"omni-rent-button-white\" href=\"\" target=\"_blank\"><img class=\"omni-rent-button-logo\" src=\"https://raw.githubusercontent.com/vdthatte/embed-styles/master/white-logo.png\"/>Rent on Omni</a>`,\n      title: 'Rent on Omni',\n      showButton: false,\n      isRed: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  handleChange(e){\n    let change = {}\n    change[e.target.name] = e.target.value\n    this.setState(change)\n\n    if(e.target.name == \"storeLink\"){\n      if(e.target.value == \"\"){\n        this.setState({\n          isWrongLink: false,\n          showButton: false\n        })\n      } else if(e.target.value.split(\"/\")[3] == \"stores\"){\n        this.setState({\n          isWrongLink: false,\n          code: `\n          <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"https://vdthatte.github.io/button-css/button.css\" >\n          <a class=\"omni-rent-button-white\" href=\"` + e.target.value + `\" target=\"_blank\"><img class=\"omni-rent-button-logo\" src=\"https://raw.githubusercontent.com/vdthatte/embed-styles/master/white-logo.png\"/>` + this.state.title +`</a>`,\n          showButton: true\n        })\n      } else {\n        this.setState({\n          isWrongLink: true,\n          showButton: false\n        })\n      }\n    }\n    if(e.target.name == \"title\") {\n      this.setState({\n        code: `\n        <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"https://vdthatte.github.io/button-css/button.css\" >\n        <a class=\"omni-rent-button-white\" href=\"` + this.state.storeLink + `\" target=\"_blank\"><img class=\"omni-rent-button-logo\" src=\"https://raw.githubusercontent.com/vdthatte/embed-styles/master/white-logo.png\"/>` + e.target.value +`</a>`,\n      })\n    }\n  }\n\n  changeColor(isRed){\n    if(isRed){\n      this.setState({\n        isRed: true,\n        code: `\n        <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"https://vdthatte.github.io/button-css/button.css\" >\n          <a class=\"omni-rent-button-red\" href=\"` + this.state.storeLink + `\" target=\"_blank\"><img class=\"omni-rent-button-logo\" src=\"https://raw.githubusercontent.com/vdthatte/embed-styles/master/white-logo.png\"/>` + this.state.title +`</a>`,\n      })\n    } else {\n      this.setState({\n        isRed: false,\n        code: `\n        <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"https://vdthatte.github.io/button-css/button.css\" >\n          <a class=\"omni-rent-button-white\" href=\"` + this.state.storeLink + `\" target=\"_blank\"><img class=\"omni-rent-button-logo\" src=\"https://raw.githubusercontent.com/vdthatte/embed-styles/master/logo.png\"/>` + this.state.title +`</a>`,\n      })\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n\n        <div className=\"rightSection\">\n\n          <div className=\"logoDiv\">\n            <center>\n              <svg width=\"32\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M30.291 8.8l.005.01C31.471 11.032 32 13.303 32 16c0 8.836-7.163 16-16 16S0 24.836 0 16 7.163 0 16 0c2.896 0 5.097.487 7.425 1.825a1.307 1.307 0 1 1-1.027 2.403c-.001.003.027.01.026.012A13.447 13.447 0 0 0 16 2.612C8.606 2.612 2.612 8.606 2.612 16S8.606 29.388 16 29.388 29.388 23.394 29.388 16c0-2.144-.5-4.153-1.395-5.95l-.007-.015a1.308 1.308 0 0 1 2.26-1.31c.013.026.03.048.045.075zm-6.605-.15c.346.346.313.852.313 1.283v12.785c0 .077-.008.152-.022.225l-.004.028a1.272 1.272 0 0 1-.157.4 1.292 1.292 0 0 1-.148.2c-.015.018-.027.037-.044.054-.016.017-.036.029-.053.044a1.289 1.289 0 0 1-.601.305l-.028.004a1.291 1.291 0 0 1-.226.022h-.001a1.28 1.28 0 0 1-.233-.022l-.016-.003a1.261 1.261 0 0 1-.21-.062l-.034-.012a1.271 1.271 0 0 1-.182-.096c-.016-.01-.032-.018-.047-.029a1.296 1.296 0 0 1-.161-.131c-.008-.008-.016-.012-.024-.02l-11.24-11.24v9.994c0 .707-.577 1.285-1.284 1.285A1.288 1.288 0 0 1 8 22.379V9.281c0-.076.008-.151.021-.224l.005-.028a1.254 1.254 0 0 1 .157-.4 1.233 1.233 0 0 1 .147-.2c.016-.018.028-.037.045-.054.016-.017.036-.029.053-.044a1.353 1.353 0 0 1 .34-.22c.022-.011.046-.02.07-.029a1.29 1.29 0 0 1 .191-.056l.028-.004a1.258 1.258 0 0 1 .46 0l.016.003c.073.014.143.036.21.062l.034.012c.064.027.124.06.182.096l.047.028a1.3 1.3 0 0 1 .161.132c.008.008.016.012.024.02l5.977 5.977 5.701-5.703c.5-.499 1.317-.499 1.817 0zm4.047-3.05a1.333 1.333 0 1 1-2.666 0 1.333 1.333 0 0 1 2.666 0zm-6.4 14.133V12.8l-3.2 3.467 3.2 3.466z\" fill=\"#32393D\" fill-rule=\"evenodd\"></path>\n              </svg>\n            </center>\n          </div>\n\n          <input placeholder=\"Drop storefront link here\" className=\"store-link-input\" value={this.state.storeLink} onChange={this.handleChange} name=\"storeLink\"></input>\n          {\n            (this.state.isWrongLink) ? (\n              <p>wrong link</p>\n            ) : (null)\n          }\n\n\n              <div>\n\n                <input placeholder=\"Rent on Omni\" className=\"button-name-input\" value={this.state.title} onChange={this.handleChange} name=\"title\"></input>\n                \n                  <div className=\"chooseColorSection\">\n                    <center>\n                      \n                      <p className=\"pickColor\">Pick a color:</p>\n                      {\n                        (this.state.isRed) ? (\n                          <div>\n                            <button className=\"white\" onClick={() => this.changeColor(false)}></button>\n                            <button className=\"redOutline\" onClick={() => this.changeColor(true)}></button>\n                          </div>\n                        ) : (\n                          <div>\n                            <button className=\"whiteOutline\" onClick={() => this.changeColor(false)}></button>\n                            <button className=\"red\" onClick={() => this.changeColor(true)}></button>\n                          </div>\n                        )\n                      }\n\n                      <div className=\"buttonSection\">\n                      {\n                        (this.state.isRed) ? (\n                          <a className=\"redButton\"><img className=\"buttonLogo\" src=\"https://raw.githubusercontent.com/vdthatte/embed-styles/master/white-logo.png\"/>{this.state.title}</a>\n                        ) : (\n                          <a className=\"whiteButton\"><img className=\"buttonLogo\" src=\"https://raw.githubusercontent.com/vdthatte/embed-styles/master/logo.png\"/>{this.state.title}</a>\n                        )\n                      }\n                      </div>\n\n                    </center>\n                  </div>\n                \n\n\n                <div className=\"codeBlock\">\n                  <p className=\"code\">\n                  {this.state.code}\n                  </p>\n                </div>\n                <center><button className=\"copyCodeButton\">Copy Code</button></center>\n              </div>\n\n        </div>\n\n        <div className=\"leftSection\">\n\n\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// TODO\n// setup project - done\n// setup input field - done\n// check if link is from store front - done\n// create button with link - done\n// create relevant button code - done\n// style buttons based on store fronts -done\n// update relevant button code - done\n// test with different usercases - done\n// design epic page with copy - ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}